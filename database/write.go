package database

import (
	"log"
	"os"

	"nvdbase/cve"
)

func VerifyAndWrite(pkgInfo *cve.PackageInfoNVD, fileName string) {
	affectedPackages := getAffectedPackages(pkgInfo)
	if len(affectedPackages) == 0 {
		log.Printf("Found no affected packages for %s, skipping", pkgInfo.Cve)
		return
	}

	log.Printf("Found %d affected java packages for %s", len(affectedPackages), pkgInfo.Cve)
	pkgEntry := cve.PackageEntry{Cve: pkgInfo.Cve, AffectedPackages: affectedPackages}
	encoded, err := cve.Encode(pkgEntry)
	if err != nil {
		log.Printf("Error marshalling package entry: %s\n", err.Error())
		return
	}

	log.Printf("Writing affected packges: %+v\n", affectedPackages)

	f, err := os.OpenFile(fileName, os.O_APPEND|os.O_WRONLY|os.O_CREATE, 0600)
	if err != nil {
		panic(err)
	}

	defer f.Close()

	if _, err = f.WriteString(string(encoded) + "\n"); err != nil {
		panic(err)
	}
}
